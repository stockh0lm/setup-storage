.\"                                      Hey, EMACS: -*- nroff -*-
.\" .TH setup-storage 8 "11 april 2008" "FAI 3.2.8"
.\" Please adjust this date whenever revising the manpage.
.\"
.\" Some roff macros, for reference:
.\" .nh        disable hyphenation
.\" .hy        enable hyphenation
.\" .ad l      left justify
.\" .ad b      justify to both left and right margins
.\" .nf        disable filling
.\" .fi        enable filling
.\" .br        insert line break
.\" .sp <n>    insert n+1 empty lines
.\" for manpage-specific macros, see man(7)
.Dd April 11, 2008
.Dt SETUP-STORAGE 8 SMM
.Os Debian/GNU Linux
.Sh NAME
.Nm setup-storage
.Nd automatically prepare storage devices
.Sh SYNOPSIS
.Nm
.Op Fl X
.Op Fl f Ar filename
.Op Fl d
.Op Fl h
.Sh DESCRIPTION
Using FAI disk_config files,
.Nm
computes effective partition and volume sizes and executes the necessary
commands to configure storage devices. It manages disk drives as well as RAID
and LVM volumes. It handles all file systems supported by
.Xr parted 8
as well as ntfs, but is flexible enough to be extended to further types as well.
Once the storage devices are prepared, an appropriate
.Xr fstab 5
file is generated.
.Pp
Without the
.Fl X
parameter,
.Nm
runs in test-only mode and does not execute commands other than writing disk
labels to a blank disk.
.Pp
The exit code of
.Nm
is 0 if all operations were performed successfully, and non-zero if an error
occurs.
.Sh OPTIONS
.Bl -tag -width Ds
.Pp
.It Fl X
Really write the configuration to disk. Otherwise,
.Nm
runs in test-only mode.
.Pp
.It Fl f Ar filename
Normally,
.Nm
selects an appropriate configuration from
.Sm off
.Ev FAI
/disk_config/
.Sm on
by picking the first class from
.EV classes
that has an existing file.
If, however,
.Fl f
is given, the configuration in
.Ar filename
is used.
.Pp
.It Fl d
Enable debugging output.
.Pp
.It Fl h
Display the synopsis and version info and exit.
.El
.Sh ENVIRONMENT
.Nm
will uses the following environment variables:
.Bl -tag -width "disklist"
.It Ev disklist
The
.Ev disklist
variable must contain a newline separated list of disk drives available in the
system. Their order matters as they may be referred to as disk1, etc. in
disk_config.
.It Ev debug
If
.Ev debug
is set to a non-zero value, all actions and details to track the operation of
.Nm
are printed to stderr.
.It Ev FAI
The location of the config space to find the disk_config directory.
.It Ev classes
The list of FAI classes to determine the appropriate configuration to choose.
.It Ev LOGDIR
.Nm
generates disk_var.sh and fstab (see below) in this directory.
.El
.Sh FILES
If
.Nm
executes successfully, an
.Xr fstab 5
file matching the specified configuration is generated as
.Sm off
.Ev LOGDIR
/fstab.
.Sm on
Further,
.Sm off
.Ev LOGDIR
/disk_var.sh
.Sm on
is generated and may be sourced to get the variables
.Ev SWAPLIST, ROOT_PARTITION, BOOT_PARTITION
and
.Ev BOOT_DEVICE.
The latter two will only be set in case they
reside on a disk drive.
.Sh SYNTAX
This section describes the syntax of disk_config files
.Pp
file ::= <lines> EOF 
.Pp
lines ::= EOL 
          /* empty lines or whitespace only */
          | <comment> EOL 
          | <config> EOL 
.Pp
comment ::= #.* 
.Pp
config ::= disk_config lvm( <lvmoption>)* 
           | disk_config raid( <raidoption>)*
           | disk_config end 
           | disk_config disk[[:digit:]]+( <option>)*
           | disk_config [^[:space:]]+( <option>)*
           /* fully qualified device-path or short form, like hda, whereby full
            * path is assumed to be /dev/hda */
           | <volume>
.Pp
lvmoption ::= /* empty */
           | preserve_always:[[:digit:]]+(,[[:digit:]]+)*
           /* preserve partitions -- always */
           | preserve_reinstall:[[:digit:]]+(,[[:digit:]]+)*
           /* preserve partitions -- unless the system is installed for the 
           first time */
           | resize:[[:digit:]]+(,[[:digit:]]+)*
           /* attempt to resize partitions */
           | fstabkey:(device|label|uuid)
           /* when creating the fstab, the key used for defining the device
           may be the device (/dev/xxx), a label given using -L, or the uuid
           */  
.Pp
raidoption ::= /* empty */
           | preserve_always:[[:digit:]]+(,[[:digit:]]+)*
           /* preserve partitions -- always */
           | preserve_reinstall:[[:digit:]]+(,[[:digit:]]+)*
           /* preserve partitions -- unless the system is installed for the 
           first time */
           | fstabkey:(device|label|uuid)
           /* when creating the fstab, the key used for defining the device
           may be the device (/dev/xxx), a label given using -L, or the uuid
           */  
.Pp
option ::= /* empty */
           | preserve_always:[[:digit:]]+(,[[:digit:]]+)*
           /* preserve partitions -- always */
           | preserve_reinstall:[[:digit:]]+(,[[:digit:]]+)*
           /* preserve partitions -- unless the system is installed for the 
           first time */
           | resize:[[:digit:]]+(,[[:digit:]]+)*
           /* attempt to resize partitions */
           | disklabel:(msdos|gpt)
           /* write a disklabel - default is msdos */
           | bootable:[[:digit:]]+
           /* mark a partition bootable, default is / */
           | virtual
           /* do not assume the disk to be a physical device, use with xen */
           | fstabkey:(device|label|uuid)
           /* when creating the fstab, the key used for defining the device
           may be the device (/dev/xxx), a label given using -L, or the uuid
           */  
.Pp
volume ::= <type> <mountpoint> <size> <filesystem> <mount_options> <fs_options>
           | vg <name> <size>
           /* lvm vg */
.Pp
type ::= primary
         /* for physical disks only */
         | logical
         /* for physical disks only */
         | raid[0156]
         /* raid level */
         | [^/[:space:]]+-[^/[:space:]]+
         /* lvm logical volume: vg name and lv name*/
.Pp
mountpoint ::= -
               /* do not mount */
               | swap
               /* swap space */
               | /[^[:space:]]*(:encrypt)?
               /* fully qualified path; if :encrypt is given, the partition
                * will be encrypted, the key is generated automatically */
.Pp
name ::= [^/[:space:]]+
         /* lvm volume group name */
.Pp
size ::= [[:digit:]]+[kMGTP%]?(-([[:digit:]]+[kMGTP%]?)?)?(:resize)?
         /* size in kilo, mega (default), giga, tera or petabytes or %,
          * possibly given as a range; physical
          * partitions or lvm logical volumes only; */
         | -[[:digit:]]+[kMGTP%]?(:resize)?
         /* size in kilo, mega (default), giga, tera or petabytes or %,
          * given as upper limit; physical partitions
          * or lvm logical volumes only */
         | [^,:[:space:]]+(:(spare|missing))*(,[^,:[:space:]]+(:(spare|missing))*)*
         /* devices and options for a raid or lvm vg */

mount_options ::= [^[:space:]]+
.Pp
filesystem ::= -
               | swap
               | [^[:space:]]
               /* mkfs.xxx must exist */
.Pp
fs_options ::= (createopts=".*"|tuneopts=".*")*
               /* options to append to mkfs.xxx and to the filesystem-specific
                * tuning tool */
               | .*
               /* arbitrary options appended to mkfs.xxx call */
.Sh EXAMPLES
# Configure the device /dev/hda
disk_config hda   preserve:6,7   disklabel:msdos  bootable:3
# preserve the 6th and the 7th partition. The disklabel is msdos, which is the default
# for x86. Furthermore the 3rd partition is made bootable. 
primary /boot     20-100        ext3            rw
# create a primary partition /dev/hda1 with a size between 20 and 100 MB and mount it
# read-write as /boot; it is formatted using ext3 filesystem
primary swap      1000     swap       sw
# /dev/hda2 will be a swap space of 1000 MB
primary /         12000      ext3           rw        -b 2048
# /dev/hda3 should be formatted using ext3 filesystem; when calling mkfs.ext3
# the option "-b 2048" is appended.
logical /tmp      1000      ext3            rw,nosuid
# create the logical partition /dev/hda5
logical /usr      preserve6      ext3          rw
logical /var      10%-      ext3               rw
# make /dev/hda7 at least 10% of the disk size
logical /nobackup 0-        xfs                rw
# use mkfs.xfs to format the partition
.Pp
# Create a softRAID
disk_config raid
raid1        /    sda1,sdd1  ext2        rw,errors=remount-ro
# create a RAID-1 on /dev/sda1 and /dev/sdd1, format using mkfs.ext2 and mount
# it as /
raid0        -    disk2.2,sdc1,sde1:spare:missing  ext2       default
# create a RAID-0 on the second partition of the second disk, /dev/sdc1, and
# /dev/sde1 as a spare partition, which (may?) me missing
.Pp
# Simple LVM example
disk_config sda  bootable:1
primary /boot 500 ext3 rw
primary -       4096-   -       -

disk_config lvm
vg my_pv        sda2
my_pv-_swap     swap    2048    swap    sw
my_pv-_root     /       2048    ext3 rw
.Sh SEE ALSO
This program is part of FAI (Fully Automatic Installation).
The FAI homepage is http://www.informatik.uni-koeln.de/fai.
.Pp
As
.Nm
is still beta-software being actively developed, its documentation is maintained
in a wiki page at http://faiwiki.debian.net/index.php/Setup-storage.
.Sh AUTHOR
FAI is courtesy of Thomas Lange <lange@informatik.uni-koeln.de>. Michael
Tautschnig <mt@debian.org> contributed the initial version of
.Nm
to replace the previous setup-harddisks, with the help of Christian Kern.
