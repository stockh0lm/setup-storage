#! /bin/sh

# $Id$
#
# prerm script for fai
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <prerm> `remove'
#        * <old-prerm> `upgrade' <new-version>
#        * <new-prerm> `failed-upgrade' <old-version>
#        * <conflictor's-prerm> `remove' `in-favour' <package> <new-version>
#        * <deconfigured's-prerm> `deconfigure' `in-favour'
#          <package-being-installed> <version> `removing'
#          <conflicting-package> <version>
# for details, see /usr/doc/packaging-manual/

. /etc/fai/fai.conf

# potato only 
test -f /etc/init.d/nfs-server && nfsserver=nfs-server

test -f /etc/init.d/nfs-kernel-server && nfsserver=nfs-kernel-server
test -f /etc/init.d/nfs-user-server && nfsserver=nfs-user-server

case "$1" in
    remove|upgrade|deconfigure)
#       install-info --quiet --remove /usr/info/fai.info.gz

umount -n $NFSROOT/proc 2>/dev/null || true
umount -n $NFSROOT/dev/pts 2>/dev/null || true
rm -rf $NFSROOT

perl -ni.bak -e "print unless m#^$FAI_CONFIGDIR\s#" /etc/exports
perl -ni.bak -e "print unless m#^$NFSROOT\s#" /etc/exports
/etc/init.d/$nfsserver reload

rmdir $FAI_CONFIGDIR || true

[ -f /home/$LOGUSER/.account_created_by_fai_package ] && userdel -r $LOGUSER

        ;;
    failed-upgrade)
        ;;
    *)
        echo "prerm called with unknown argument \`$1'" >&2
        exit 0
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0


