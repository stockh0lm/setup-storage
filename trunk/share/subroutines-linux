#! /bin/sh

# $Id$
#
# subroutine definitions for linux
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
set_disk_info() {

    # the variable holds a space separated list of devices and their block size
    device_size=$(disk-info)

    # a list of all local disks, without size
    disklist=$(list_disks $device_size)
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
jobsrunning() {

    # test if jobs are running
    ps r | egrep -qv "ps r|TIME COMMAND"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
eval_cmdline() {

    # parse kernel parameters and define variables
    local word

    echo -n "Kernel parameters: "; cat /proc/cmdline
    for word in $(cat /proc/cmdline) ; do
	case $word in
	    [a-zA-Z]*=*)
		echo "Defining variable: $word"
		eval $word
		;;
	esac
    done
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
task_confdir() {

    local bootlog
    eval_cmdline

    bootlog=$LOGDIR/boot.log
    get-boot-info
    echo "Reading $bootlog"
    . $bootlog
    unset T170 T171 T172 ROOT_PATH BOOTFILE

    # define flags to see if syslogd should be started
    # this routine is called again, so you can use a hook to redefine flags
    echo 6 > /proc/sys/kernel/printk
    define_fai_flags
    [ "$syslogd" ] && {
      klogd -c7 -f $LOGDIR/kernel.log
      syslogd -m 0 -p /tmp/etc/syslogsocket
    }

    echo "SERVER=$SERVER" >> $rcsfaivar
    create_resolv_conf
    get_fai_dir

    # check if monitor server is available
    [ -z "$monserver" ] && monserver=$SERVER
    monitor=1
    if sndmon check; then
	echo "Monitoring to server $monserver enabled."
    else
	monitor=0
	echo "Can't connect $monserver. Disabling monitoring."
    fi
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
task_partition() {

    echo "Partitioning local harddisks"
    [ ! -s $diskvar ] && setup_harddisks -d -X > $LOGDIR/format.log 2>&1
    # setup_harddisks must create $diskvar file
    if [ ! -s $diskvar ]; then
	cat $LOGDIR/format.log
	die "setup_harddisks did not create $diskvar file."
    fi
    # now define variable for root and boot partition and boot device
    . $diskvar
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
task_extrbase() {

    local fs=$FAI_ROOT/etc/$fstab
    # extract the tar file which was the result of debootstrap
    echo "Unpacking Debian base archive"
    gzip -dc /var/tmp/base.tgz | tar -C $FAI_ROOT -xpf -
    # now we can copy fstab
    [ -f $fs ] && mv $fs $fs.old
    cp -p $LOGDIR/$fstab $fs
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
task_mirror() {

    # mount debian mirror directory
    [ "$FAI_DEBMIRROR" ] || return   # nothing to do
    mkdir -p $FAI_ROOT/$MNTPOINT
    mount $romountopt $FAI_DEBMIRROR $FAI_ROOT/$MNTPOINT ||
      die "Can't mount $FAI_DEBMIRROR"
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
task_updatebase() {

    # maybe the base system is not up to date
    echo "Updating base"
    # try to mount the config space, since it can also contain Debian Packages
    # in /fai/files/packages 
    mount --bind $FAI $FAI_ROOT/fai
    if [ "$debug" ]; then
	prepare_apt | tee -a $LOGDIR/updatebase.log 2>&1
    else
	prepare_apt  > $LOGDIR/updatebase.log 2>&1
    fi
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
task_instsoft() {

    echo "Installing software may take a while"
    if [ "$debug" ]; then
	install_packages | tee -a $LOGDIR/software.log
    elif [ "$verbose" ]; then
	yes '' | install_packages 2>&1 | tee -a $LOGDIR/software.log
    else
	yes '' | install_packages >> $LOGDIR/software.log 2>&1
    fi
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
task_finish() {

    # show some local information
    ifconfig; df
    # umount swap space
    local sd
    for sd in $SWAPLIST; do
       swapoff $sd && [ "$verbose" ] && echo "Disable swap device $sd"
    done
    umount -n $FAI_ROOT/proc
    # undo fake of all programs made by fai
    fai-divert -R
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
task_chboot() {

    local frsh doexit
    doexit=0
    frsh="$FAI_REMOTESH -l $LOGUSER ${SERVER}"

    if [ -z "$LOGUSER" ] ; then
	echo "LOGUSER not defined. Can't change network boot configuration"
	doexit=1
    fi

    if [ -z "$SERVER" ] ; then
	echo "SERVER not defined. Can't change network boot configuration"
	doexit=1
    fi
    [ $doexit -eq 1 ] && return

    if dmesg | grep -q "Sending BOOTP requests"; then
        # change boot device (local disk or network) when using bootp
	[ "$LOGUSER" -a "$TFTPLINK" ] &&
	    $frsh "cd /boot/fai; rm -f $HOSTNAME; ln -s $TFTPLINK $HOSTNAME"
    else
        # change boot device (local disk or network) when using DHCP
        # first test if a given filename exists on the server
	testcmd="test -s /boot/fai/$HOSTNAME-localboot ; echo \$?"
	ret=`$FAI_REMOTESH -l $LOGUSER ${SERVER} "$testcmd"`
	if [ -z "$ret" ]; then
	    echo "Error: $FAI_REMOTESH -l $LOGUSER ${SERVER} failed."
	    ret=0
	fi

	if [ "$ret" -ne 0 ]; then
	    # copy the kernel to the server
	    $FAI_REMOTECP $target/boot/vmlinuz-* $LOGUSER@${SERVER}:/boot/fai/$HOSTNAME-localboot
           
	    # copy initrd to the server
            if grep -iq do_initrd.*yes $target/etc/kernel-img.conf; then
              $FAI_REMOTECP $target/boot/initrd.img-* \
                            $LOGUSER@${SERVER}:/boot/fai/$HOSTNAME-initrd.img
            fi
	fi
	. $diskvar # read ROOT_PARTITION

        # Change the pxe configuration, test for initrd
        if grep -iq do_initrd.*yes $target/etc/kernel-img.conf; then
	  $frsh /usr/sbin/fai-chboot -k initrd=$HOSTNAME-initrd.img -v $HOSTNAME-localboot $ROOT_PARTITION $HOSTNAME
        else
	  $frsh /usr/sbin/fai-chboot -v $HOSTNAME-localboot $ROOT_PARTITION $HOSTNAME
        fi
    fi
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
sndmon () {

    # send message to monitor daemon
    [ "$monitor" -eq 0 ] && return 0
    echo "$HOSTNAME $*" | nc $monserver 4711
    return $?
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
