#! /bin/sh

# $Id$
#*********************************************************************
#
# make-fai-bootfloppy -- create a boot floppy for FAI
#
# This script is part of FAI (Fully Automatic Installation)
# (c) 2000-2002 by Thomas Lange, lange@informatik.uni-koeln.de
# Universitaet zu Koeln
#
#*********************************************************************
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
# 
# A copy of the GNU General Public License is available as
# `/usr/share/common-licences/GPL' in the Debian GNU/Linux distribution
# or on the World Wide Web at http://www.gnu.org/copyleft/gpl.html.  You
# can also obtain it by writing to the Free Software Foundation, Inc.,
# 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
#*********************************************************************

version="version 1.8.0, 25-nov-2002"
set -e
MKIMAGE=0
floppydev=/dev/fd0
MOUNTPOINT=/floppy
mountopts=""
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
umount_dirs() {
    cd /
    umount "$MOUNTPOINT" || true
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
die() {

    echo -e "$@"
    exit 99
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
determine_kernel_version() {

    local num all
    all=$(ls $NFSROOT/boot/System.map-*)
    if [ `echo $all | wc -l ` = 1 ]; then
	KERNELVERSION=$(echo "kernel version $all" | sed -e 's#.*/System.map-##')
    else
	die "Can't determine kernel version for $all"
    fi
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
usage() {

    cat <<EOF
make-fai-bootfloppy, create a boot floppy for FAI. $version

   Copyright (C) 2000-2002 by Thomas Lange

   Usage: make-fai-bootfloppy [parameter]

   -d label   use label when selection the default boot kernel (and parameters).
	      d for dhcp
	      b for bootp
	      f for the fixed IP address for the server
	      Without this option both (dhcp and booth) are used
   -h         print this message.
   -f file    make a 1440k floppy image
   -m dir     use dir as mountpoint [/floppy]
   -s host    use a static ip for host (try to get from DNS)
   -v         print verbose output (print lilo.conf)

DESCRIPTION
   Creates a boot floppy for booting a FAI install client.
   No arguments are needed but you must be root.
   All parameters are passed to the kernel via append in lilo.conf.

EXAMPLE
    To make a boot floppy for my old SMC EtherCard Plus Elite 16T, I use
    # make-fai-bootfloppy "reserve=0x300,32 ether=10,0x300,eth0"

    To make a boot floppy using the DHCP protocol
    # make-fai-bootfloppy -d d

EOF
    exit 0
}

# - - - - - - - - - - - - - - - - - - - - - - - - - -
# main part
while getopts "vf:s:m:hd:" opt ; do
        case "$opt" in
        h) usage ;;
	f) MKIMAGE=1; floppydev="$OPTARG" ;;
	m) MOUNTPOINT="$OPTARG" ;;
	s) TARGETHOST="$OPTARG" ;;
	d) BTYPE="$OPTARG" ;;
	v) verbose=1 ;;
        ?) echo "Error parsing arguments"; exit 1;;
esac
done
shift `expr $OPTIND - 1`

if [ `id -u` -ne 0 ]; then
 echo "You must be root! Or try $0 -h"
 exit 9
fi

trap "umount_dirs" EXIT
# additional kernel parameter
params="$@"

. /etc/fai/fai.conf
determine_kernel_version

case "$BTYPE" in
    b) defaultboot=FAI-BOOTP ;;
    d) defaultboot=FAI-DHCP  ;;
    f) defaultboot=FAI-FIXED-IP  ;;
    *) defaultboot=FAI-BOTH  ;;
esac

ndevices=0
devices=`egrep -v "lo:|^Inter-|^ face" /proc/net/dev | awk -F: '{print $1}'`
for dev in $devices; do
    ndevices=$(($ndevices+1))
done
[ $ndevices = 0 ] && die "No network interface found. Can't determine IP address."
if [ $ndevices = 1 ]; then
    SERVERINTERFACE=$dev
else
    while [ -z "$SERVERINTERFACE" ]; do
	echo "Your machine has multiple network interfaces: $devices"
	echo -n "Specify which one will be used for FAI (e.g. eth1): "
	read SERVERINTERFACE
    done
fi
SERVERIP=`LC_ALL=C ifconfig $SERVERINTERFACE | perl -ne '/inet addr:([0-9\.]+)/ && print $1'`
echo "Using interface $SERVERINTERFACE with IP address: $SERVERIP"

if [ -n "${TARGETHOST}" ] ; then
    BROADCAST=`LC_ALL=C ifconfig $SERVERINTERFACE | perl -ne '/Bcast:([0-9\.]+)/ && print $1'`
    NETMASK=`LC_ALL=C ifconfig $SERVERINTERFACE | perl -ne '/Mask:([0-9\.]+)/ && print $1'`
    GATEWAY=`LC_ALL=C route -n | grep '^0\.0\.0\.0' | awk '{ print $2 }'`
    TARGETIP=`host -t a ${TARGETHOST} 2> /dev/null | awk '{print $3}'`
    fixedparams="ip=${TARGETIP}:${SERVERIP}:${GATEWAY}:${NETMASK}:${TARGETHOST}::off" 
fi

if [ $MKIMAGE -eq 1 ]; then 
    dd if=/dev/zero of=$floppydev bs=1024 count=1440
    mountopts="$mountopts -o loop"
    mkfsopt=-F
fi

# pay attention: if -i option is too large, then too few inodes are created on the floppy
# check with df -i
mke2fs $mkfsopt -q -i 80000 -m 0 $floppydev || die "Can't create ext2 file system on $floppydev"
mount $mountopts $floppydev $MOUNTPOINT || die "Can't mount floppy $floppydev"
mkdir $MOUNTPOINT/boot $MOUNTPOINT/etc
rmdir $MOUNTPOINT/lost+found

cd $NFSROOT && cp -dp boot/boot-menu.b boot/vmlinuz-$KERNELVERSION $MOUNTPOINT/boot
ln -s boot/vmlinuz-$KERNELVERSION $MOUNTPOINT/vmlinuz
ln -fs $MOUNTPOINT/boot/boot-menu.b $MOUNTPOINT/boot/boot.b

[ $MKIMAGE -eq 1 ] && cat > $MOUNTPOINT/etc/lilo.conf <<-EOF
    disk=$(mount | grep $MOUNTPOINT | sed -e 's/.*loop=\([^)]*\))/\1/')
    bios=0x00
    cylinders=80
    heads=2
    sectors=18
EOF

cat >> $MOUNTPOINT/etc/lilo.conf <<-EOF
    boot=$floppydev
    install=$MOUNTPOINT/boot/boot-menu.b
    map=$MOUNTPOINT/boot/map
    delay=15
    compact
    read-only

    default=$defaultboot

    image=$MOUNTPOINT/vmlinuz
    append="ip=both root=/dev/nfs $params"
    label=FAI-BOTH

    image=$MOUNTPOINT/vmlinuz
    append="ip=bootp root=/dev/nfs $params"
    label=FAI-BOOTP

    image=$MOUNTPOINT/vmlinuz
    append="ip=dhcp root=/dev/nfs $params"
    label=FAI-DHCP

    image=$MOUNTPOINT/vmlinuz
    label=FAI-FIXED-IP
    append="root=$SERVERIP:$NFSROOT ip=both $fixedparams $params"

EOF

$NFSROOT/sbin/lilo -C $MOUNTPOINT/etc/lilo.conf

cat <<-EOF
	Writing boot data to floppy. The default boot label is: $defaultboot
	The kernel configuration is $NFSROOT/boot/config-$KERNELVERSION.
EOF

[ "$params" ] && echo "Additional kernel parameters: $params"

[ "$verbose" ] && {
    echo "The lilo.conf is:"
    echo
    cat $MOUNTPOINT/etc/lilo.conf
}
