2010-09-26  Michael Tautschnig  <mt@debian.org>

	* setup-storage/{Parser,Commands}.pm: Added partition pseudo-type
		luks:"<pass>" to create LUKS devices with user-defined passphrase (thanks
		Patrick Schoenfeld for suggesting this and extensive testing).
	* setup-storage.8: Document luks:"<pass>" and the need for having busybox
		installed.
Index: trunk/lib/setup-storage/Commands.pm
===================================================================
--- trunk.orig/lib/setup-storage/Commands.pm
+++ trunk/lib/setup-storage/Commands.pm	
@@ -230,7 +230,7 @@
         $pre_dep = "random_init_$real_dev";
       }
 
-      if ($mode eq "luks") {
+      if ($mode =~ /^luks(:"([^"]+)")?$/) {
         my $keyfile = "$ENV{LOGDIR}/$enc_dev_short_name";
 
         # generate a key for encryption
@@ -245,9 +245,23 @@
           "cryptsetup luksOpen $real_dev $enc_dev_short_name --key-file $keyfile",
           "crypt_format_$real_dev", "exist_$enc_dev_name" );
 
+        if (defined($1)) {
+          my $passphrase = $2;
+
+          # add user-defined key
+          &FAI::push_command(
+            "yes '$passphrase' | cryptsetup luksAddKey --key-file $keyfile $real_dev",
+            "exist_$enc_dev_name", "newkey_$enc_dev_name");
+          # remove previous key
+          &FAI::push_command(
+            "yes '$passphrase' | cryptsetup luksRemoveKey $real_dev $keyfile",
+            "newkey_$enc_dev_name", "removed_key_$enc_dev_name");
+
+          $keyfile = "none";
+        }
+
         # add entries to crypttab
         push @FAI::crypttab, "$enc_dev_short_name\t$real_dev\t$keyfile\tluks";
-
       } elsif ($mode eq "tmp" || $mode eq "swap") {
         &FAI::push_command(
           "cryptsetup --key-file=/dev/urandom create $enc_dev_short_name $real_dev",
Index: trunk/lib/setup-storage/Parser.pm
===================================================================
--- trunk.orig/lib/setup-storage/Parser.pm
+++ trunk/lib/setup-storage/Parser.pm	
@@ -710,7 +710,7 @@
           $FAI::partition_pointer = (\%FAI::configs)->{RAID}->{volumes}->{$vol_id};
         }
         mountpoint devices filesystem mount_options mdcreateopts
-        | /^(luks|tmp|swap)\s+/
+        | /^(luks|luks:"[^"]+"|tmp|swap)\s+/
         {
           ($FAI::device eq "CRYPT") or
             die "Encrypted device spec $1 invalid in context $FAI::device\n";
Index: trunk/man/setup-storage.8
===================================================================
--- trunk.orig/man/setup-storage.8
+++ trunk/man/setup-storage.8	
@@ -328,7 +328,11 @@
 .br
          | luks
 .br
-         /* encrypted partition using LUKS */
+         /* encrypted partition using LUKS and auto-generate a keyfile */
+.br
+         | luks:"[^"]+"
+.br
+         /* encrypted partition using LUKS and use quoted string as passphrase */
 .br
          | tmp
 .br
@@ -600,9 +604,11 @@
 reasons why a system may fail to boot.
 .IP \(bu
 Crypto support requires some site-specific changes: If you use cryptsetup
-stanza, a crypttab file and key files for all luks volumes will be created. The
-key files are left in /tmp/fai; you will want to copy these to some removable
-media.
+stanza, a crypttab file and key files for all luks volumes will be created
+(unless you used the passphrase option). The key files are left in /tmp/fai; you
+will want to copy these to some removable media. To make encrypted root devices
+actually usable, you need to add busybox (and initramfs-tools) to your package
+config.
 .SH SEE ALSO
 This program is part of FAI (Fully Automatic Installation).
 The FAI homepage is http://fai-project.org.
