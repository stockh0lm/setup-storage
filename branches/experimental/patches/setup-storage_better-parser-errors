2010-06-18  Michael Tautschnig  <mt@debian.org>

	* setup-storage/Parser.pm: Handle parse errors earlier for more informative
		error messages.
	* setup-storage/Volumes.pm: Proper error message in case an extended partition
		is marked as preserve
Index: trunk/lib/setup-storage/Parser.pm
===================================================================
--- trunk.orig/lib/setup-storage/Parser.pm
+++ trunk/lib/setup-storage/Parser.pm	
@@ -238,7 +238,7 @@
 
       # msdos disk labels don't allow for more than 4 primary partitions
       ($extended < 5)
-        or die "Too many primary partitions while creating extended\n";
+        or die "Too many primary partitions; cannot add extended partition\n";
 
       # initialize the entry, unless it already exists
       defined ($FAI::configs{$FAI::device}{partitions}{$extended})
@@ -246,6 +246,10 @@
           size => {}
         };
 
+      # as we can't compute the index from the reference, we need to store the
+      # $part_number explicitly
+      (\%FAI::configs)->{$FAI::device}->{partitions}->{$extended}->{number} = $extended;
+
       my $part_size =
         (\%FAI::configs)->{$FAI::device}->{partitions}->{$extended}->{size};
 
@@ -354,7 +358,6 @@
         {
           $return = 1;
         }
-        | <error>
 
     line: <skip: qr/[ \t]*/> "\\n"
         | <skip: qr/[ \t]*/> comment "\\n"
@@ -420,6 +423,7 @@
           &FAI::init_disk_config($item[ 1 ]);
         }
         option(s?)
+        | <error>
 
     raid_option: /^preserve_always:(\d+(,\d+)*)/
         {
@@ -643,6 +647,7 @@
         }
         mountpoint tmpfs_size mount_options
         | type mountpoint size filesystem mount_options lv_or_fsopts
+        | <error>
 
     type: 'primary'
         {
@@ -714,7 +719,7 @@
           1;
         }
 
-    size: /^((RAM:\d+%|\d+[kMGTP%iB]*)(-(RAM:\d+%|\d+[kMGTP%iB]*)?)?)(:resize)?\s+/
+    size: /^((RAM:\d+%|\d+[kMGTP%iB]*)(-(RAM:\d+%|\d+[kMGTP%iB]*)?)?)(:resize)?/
         {
           # complete the size specification to be a range in all cases
           my $range = $1;
Index: trunk/lib/setup-storage/Volumes.pm
===================================================================
--- trunk.orig/lib/setup-storage/Volumes.pm
+++ trunk/lib/setup-storage/Volumes.pm	
@@ -520,6 +520,8 @@
               defined($FAI::current_config{$1}{partitions}{$part_id})) ? 1 : 0)
           if (2 == $part->{size}->{preserve});
         next unless ($part->{size}->{preserve} || $part->{size}->{resize});
+        ($part->{size}->{extended}) and die
+          "Preserving extended partitions is not supported; mark all logical partitions instead\n";
         defined ($FAI::current_config{$1}{partitions}{$part_id}) or die
           "Can't preserve ". &FAI::make_device_name($1, $part->{number})
             . " because it does not exist\n";
