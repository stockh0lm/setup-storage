# generic disk configuration
#
# <type> <mountpoint> <size in mb> [mount options]     [;extra options]

disk_config disk1
# don't allocate 1% of the disk - just in case a replacement disk is
# smaller; we don't want to end up being just a little bit short
disk_reserve 1%
primary  /             2048      rw,errors=remount-ro ; -c -j ext3 raid(1,md0)
primary  swap          2048      rw                   ; raid(1,md1)
primary  -          49152-                            ; raid(1,md2) lvm(vg0)

disk_config disk2
disk_reserve 1%
primary  -             2048                           ; raid(1,md0)
primary  -             2048                           ; raid(1,md1)
primary  -          49152-                            ; raid(1,md2)

# call this volume group "vg0", which must match up with some partitions
# from above.  The default is HOSTNAME_1, and HOSTNAME is replaced by
# (you guessed it) the host name.  Having host-specific VG names means
# that you are guaranteed to be able to transport the VGs between
# systems safely.  But in this example, we don't care.
vg_config vg0
# use 128MB extents, for no particular reason other than we can.
vg_extent_size 15
# we make some LVs.  Note that we can't use unbounded ranges, because
# setup_harddisks isn't quite smart enough yet to calculate how much
# VG space there is.
lv  	/usr          8192     	rw                   ; ext3
lv  	/var          8192     	rw                   ; ext3
lv  	/home        32768    	rw,nosuid            ; ext3

# however, note how we made the minimum size of the VG partition the
# same as the total size of the LVs we allocated.  This isn't required,
# either way setup_harddisks will bomb out, but at least this way it
# will bomb out earlier, and with a better error message.  It also
# makes it a little clearer what's happening.
