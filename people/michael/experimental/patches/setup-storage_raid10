2009-06-13  Michael Tautschnig  <mt@debian.org>

	* setup-storage/Parser.pm, setup-storage/Sizes.pm: Added support for raid10
		(thanks William Francis for suggesting this).
Index: trunk/lib/setup-storage/Parser.pm
===================================================================
--- trunk.orig/lib/setup-storage/Parser.pm
+++ trunk/lib/setup-storage/Parser.pm	
@@ -458,7 +458,7 @@
         }
 
     volume: /^vg\s+/ name devices vgcreateopt(s?)
-        | /^raid([0156])\s+/
+        | /^raid([0156]|10)\s+/
         {
           # make sure that this is a RAID configuration
           ($FAI::device eq "RAID") or die "RAID entry invalid in this context\n";
Index: trunk/lib/setup-storage/Sizes.pm
===================================================================
--- trunk.orig/lib/setup-storage/Sizes.pm
+++ trunk/lib/setup-storage/Sizes.pm	
@@ -146,6 +146,7 @@
       # we can only estimate the sizes of existing volumes, assume the missing
       # ones aren't smaller
       foreach (@devcands) {
+        $dev_count-- if ($FAI::configs{RAID}{volumes}{$1}{devices}{$_}{spare});
         next if ($FAI::configs{RAID}{volumes}{$1}{devices}{$_}{missing});
         push @devs, $_;
       }
@@ -165,7 +166,7 @@
     $level = "raid$level" if ($level =~ /^\d+$/);
 
     # now do the mode-specific size estimations
-    if ($level =~ /^raid[015]$/) {
+    if ($level =~ /^raid([0156]|10)$/) {
       my $min_size = &estimate_size(shift @devs);
       foreach (@devs) {
         my $s = &FAI::estimate_size($_);
@@ -175,6 +176,8 @@
       return $min_size * $dev_count if ($level eq "raid0");
       return $min_size if ($level eq "raid1");
       return $min_size * ($dev_count - 1) if ($level eq "raid5");
+      return $min_size * ($dev_count - 2) if ($level eq "raid6");
+      return $min_size * ($dev_count/2) if ($level eq "raid10");
     } else {
 
       # probably some more should be implemented
