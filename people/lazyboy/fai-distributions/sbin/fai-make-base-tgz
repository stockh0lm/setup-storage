#!/bin/sh

# this script is avilable under the terms of the GNU GPL.
# author: Henning Sprang - henning@sprang.de

# TODO: put this info in a --help / -h function!
# this script should help to create base system images for use in FAI
# installations.
# even if debboostrap seems to have scripts for multiple different
# debian-based distributions, it most often does not succeed, for example to
# create etch base system from sarge, create debian base system from ubuntu,
# etc.
# in the end, you need the actual derbootstrap of this distribution.
#
# thsi script should help lazy people (so, at least myself :) ) to make it
# easy to create them anyway, also without installing and re-installing the
# currently needed deboostrap system.
#
# we have multiple possibilities:
# - download a ready made base system image for the
#   distribution wanted from a default location, or one given at the command
#   line
# - create a new base system  with 
#   - a debootstrap downloaded from the default location
#   - a debootstrap downloaded from a given location
#
# TODO: add the possibility to just download a readily created base image?
# TODO: add a script for centOS/redhat and other systems minimal image
# creation!


PATH=/usr/local/bin:/usr/local/sbin:/bin:/sbin:/usr/bin:/usr/sbin


if [ `id -u` -ne 0 ]; then
    echo "Run this program as root."
    exit 9
fi

while getopts vc:f:d: opt ; do
    case "$opt" in
        d) DISTRIBUTION=$OPTARG ;;
        c) cfdir=$OPTARG ;;
        v) verbose=1 ; v=-v ;;
        f) cfg=$OPTARG ;;
        ?) exit 5 ;; # error in option parsing
    esac
done

set -e

# source fai.conf and make-fai-nfsroot.conf
[ -z "$cfdir" ] && cfdir=/etc/fai
if [ ! -d "$cfdir" ]; then
    echo "$cfdir is not a directory"
    exit 6
fi



[ "$verbose" ] && echo "Using configuration files from directory $cfdir"
if [ -n "$cfg" ]; then
    . $cfdir/$cfg
else
    . $cfdir/fai.conf
fi

if [ -z $DISTRIBUTION ]; then
    echo "error: must give distribution for which base tgz should be built - exiting"
    exit 1    
fi

. /etc/fai-distributions/${DISTRIBUTION}.conf

if [ -z "$FAI_CONFIGDIR" ]; then
    echo "\$FAI_CONFIGDIR is not set. Please check your settings in $cfdir/fai.conf."
    exit 4
fi

if [ ! -d $FAI_CONFIGDIR ]; then
	echo "need a working nfsroot - run fai-setup or make-fai-nfsroot"
	exit 1
fi


# TODO: base bootstrapper dir should be defined in (not yet existing)
# generic config file)
BOOTSTRAP_DIR=/var/lib/fai-distributions/bootstrappers/$DISTRIBUTION

# cleanup dir if it already exists!
if [ -d $BOOTSTRAP_DIR ]; then
	rm -r $BOOTSTRAP_DIR
fi

mkdir -p $BOOTSTRAP_DIR
cd $BOOTSTRAP_DIR

wget $BOOTSTRAP_ARCHIVE/$BOOTSTRAP_PACKAGE


# extact debootstrap archive
dpkg-deb -x $BOOTSTRAP_PACKAGE .

cd -

# TODO: put into generic config file
FAI_TMP_BASEDIR=/tmp/fai/distributions

if [ -d $FAI_TMP_BASEDIR ]; then
	echo "deleting FAI_TMP_BASEDIR $FAI_TMP_BASEDIR"
	rm -r $FAI_TMP_BASEDIR
fi

mkdir -p $FAI_TMP_BASEDIR

# TODO: put into (not yet existing)general config file for fai-distributions
TMP_CHROOT_DIR=`mktemp -d $FAI_TMP_BASEDIR/${DISTRIBUTION}_debootstrap.XXXXXX`

echo "TMPDIR is $TMP_CHROOT_DIR"


# from here, it's debian/dpkg specific! - for additional distributions, we
# need a decision here and call something else!

# call debootstrap as neccessary
# TODO: put into config file (for each distribution)!

[ -z $DEBOOTSTRAP_EXCLUDE ] || {
    DEBOOTSTRAP_OPTIONS="--exclude=$DEBOOTSTRAP_EXCLUDE"
}

[ -z $DEBOOTSTRAP_INCLUDE ] || {
    DEBOOTSTRAP_OPTIONS="$DEBOOTSTRAP_OPTIONS --include=$DEBOOTSTRAP_INCLUDE"
}

DEBOOTSTRAP_OPTIONS="$DEBOOTSTRAP_OPTIONS --arch $DEBOOTSTRAP_ARCH \
    $DEBOOTSTRAP_DIST_NAME \
    $TMP_CHROOT_DIR \
    $MIRROR_LOCATION"

cd `dirname $0`

#export DEBOOTSTRAP_DIR=$BOOTSTRAP_DIR/usr/lib/debootstrap/
export DEBOOTSTRAP_DIR=$BOOTSTRAP_DIR/usr/share/debootstrap/

echo run $BOOTSTRAP_DIR/usr/sbin/debootstrap $DEBOOTSTRAP_OPTIONS
$BOOTSTRAP_DIR/usr/sbin/debootstrap $DEBOOTSTRAP_OPTIONS

chroot $TMP_CHROOT_DIR apt-get clean
       

# Debian specific stuff ends here

echo "Creating $DISTRIBUTION.tar.gz"

cd $TMP_CHROOT_DIR

[ -d $FAI_CONFIGDIR/basefiles ] || {
    mkdir $FAI_CONFIGDIR/basefiles
}

tar cfz $FAI_CONFIGDIR/basefiles/$DISTRIBUTION.tar.gz

chroot $TMP_CHROOT_DIR umount /dev
chroot $TMP_CHROOT_DIR umount /.dev
 
# cleanup
echo "cleaning up TMP_CHROOT_DIR $TMP_CHROOT_DIR"
rm -rf $TMP_CHROOT_DIR
